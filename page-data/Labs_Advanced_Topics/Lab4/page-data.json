{
    "componentChunkName": "component---src-pages-labs-advanced-topics-lab-4-mdx",
    "path": "/Labs_Advanced_Topics/Lab4/",
    "result": {"pageContext":{"frontmatter":{"title":"Lab14"},"relativePagePath":"/Labs_Advanced_Topics/Lab4.mdx","titleType":"page","MdxNode":{"id":"7322fc17-ba31-5160-bde0-673fbdb97967","children":[],"parent":"f7981122-2dc4-501b-83e1-d126fb4a049d","internal":{"content":"---\r\ntitle: Lab14\r\n---\r\nexport const Title = () => (\r\n  <span>\r\n    Lab 14 - Synthetic Monitoring <br />\r\n  </span>\r\n);\r\n;\r\n\r\n## Lab Overview\r\n\r\nSynthetic monitoring is a proactive approach to monitoring the performance and functionality of applications, websites, and APIs. It involves simulating real user interactions and measuring how the system responds. This allows you to identify and fix issues before they impact real users.\r\nThis lab focuses on  Instana feature - Synthetic Monitoring.\r\nKey capabilities that we will do are:\r\n1.Setting up the synthetic \"Point of Presence\" This is the component that executes the synthetic test.\r\n2.Test Availability of your website using API Simple Test \r\n\r\nBefore we can create any synthetic tests, we must first setup a synthetic \"Point of Presence\" or \"PoP server\" to playback our synthetic tests. Many customers deploy two or more \"Points of Presence\" so that they can compare the response time and availability from different network zones . \r\nIn the lab, we will begin by installing the \"Synthetic Point of Presence\". \r\n\r\n## Step 1: \r\n\r\nInstall Synthetic Point of Presence component\r\n\r\nPre-requisite \r\nSynthetic PoP needs to be deployed in a Kubernetes/Openshift cluster. Use the helm chart to deploy Synthetic PoP.\r\nThe minimum supported version for the Kubernetes distribution is 1.10 and Helm V3 is recommended\r\n \r\n***********************************************************************************************************\r\n##Note : \r\nOnly If you are using Instana POT Sandbox\r\n\r\nWe will be installing the Synthetic Point of Presence into  Kubernetes Cluster provided in the POT / Sandbox\r\nHelm is already installed on Master Node Server . We will execute below helm command on this server.\r\n***********************************************************************************************************\r\n\r\nMake sure you are logged into the server where Kubernetes/OpenShift Cluster is installed Master/Worker Node \r\n\r\n**Helm**\r\n\r\nIf Helm wasn't installed during previous labs, install it on Student VM now with command:\r\n\r\ncurl (https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)\r\n\r\nClick on \"Synthetic Monitoring\" and then on \"Deploy a PoP\" button:\r\n![Lab 14](../Labs/images/lab14.1.png) \r\n\r\nUse Simple tab for Helm command\r\n![Lab 14](../Labs/images/lab14.2.png) \r\n\r\nYou will need to edit the information contained in the helm command, so copy and paste the text to edit the file and execute accordingly.\r\nHelm install synthetic-pop \\\r\n\t--repo \"https://agents.instana.io/helm\" \\\r\n\t--namespace syn \\\r\n\t--create-namespace \\\r\n\t--set downloadKey=\"xxx\" \\\r\n\t--set controller.location=\"MyPop;RoksDK;India;Blr;0;0;This is a Synthetic PoP Testing\" \\\r\n\t--set controller.clusterName=\"cp4i\" \\\r\n        --set controller.instanaKey=\"xxx\" \\\r\n\t--set controller.instanaSyntheticEndpoint=\"https://synthetics-xxx-saas.instana.io\" \\\r\n\t--set redis.tls.enabled=false \\\r\n\t--set redis.password=\"a1fc5d01bcbb\" \\\r\n        --set seccompDefault=true \\  \r\n\tsynthetic-pop\r\n\r\nThe default helm command will look as  above Some of the parameters have been replace with \"xxx\" for security reasons.\r\nFor Synthetic Point of Presence we need to modify some of the parameters and provide one additional parameter. \r\n•\tAdd --set seccompDefault=true \\. This parameter is required for OpenShift versions 4.11 and above\r\n•\tThen, modify the controller.clusterName parameter and provide a meaningful name.\r\n•\tIn the controller.location, specify a name, display name, country, etc. for your \"Point of Presence\". \r\n\r\nCopy the helm command from the text file and paste it into a terminal window on the Student VM. This will execute the helm chart.\r\nYou should see an output similar to the following:\r\n\r\n[user@bastion ~]$ helm install synthetic-pop \\\r\n>     --repo https://agents.instana.io/helm  \\\r\n>     --namespace syn\\\r\n>     --create-namespace \\\r\n>     --set downloadKey=\"xxx\" \\\r\n>     --set controller.location=\" MyPop;RoksDK;India;Blr;0;0;This is a Synthetic PoP Testing\" \\\r\n>     --set controller.instanaKey=\"xxx\" \\\r\n>     --set controller.clusterName=\"cp4i\" \\\r\n>     --set controller.instanaSyntheticEndpoint=\" https://synthetics-xxx-saas.instana.io \" \\\r\n>     --set redis.tls.enabled=false \\\r\n>     --set redis.password=\"a1fc5d01bcbb\" \\\r\n>     --set seccompDefault=true \\\r\n>     synthetic-pop\r\nNAME: synthetic-pop\r\nLAST DEPLOYED: Thu Jul 13 07:49:37 2023\r\nNAMESPACE: syn\r\nSTATUS: deployed\r\n\r\nVerify Installation \r\nAfter the Synthetic point of presence is installed verify its appearance in the interface:\r\n![Lab 14](../Labs/images/lab14.3.png) \r\n\r\nYou can also confirm that the Synthetic Point of Presence is running by typing:\r\nget pods -n syn-space  ( Syn is a namespace) \r\n\r\n## Step 2: \r\n\r\nRest API Synthetic Tests \r\nLet's begin by executing a simple REST API test. This will be a single REST GET request.\r\nBegin by selecting Synthetics and then + ADD as seen below.\r\n![Lab 14](../Labs/images/lab14.4.png) \r\n\r\nThen, click the Add Synthetic Test button.\r\n![Lab 14](../Labs/images/lab14.5.png) \r\n\r\nyou will see that you have the option of an API Simple test or an API Script test. Leave the default of API Simple and click the Next button.\r\n![Lab 14](../Labs/images/lab14.6.png) \r\n\r\nA new dialog will open prompting for the REST API GET URL. Enter the following URL:\r\nhttp://x.x.x.x:8080/    \r\nThis could be any REST request. In this case, we are testing the  API call within the Robot Shop application deployed on sandbox.\r\n\r\nThen, select your Point of Presence location and click Next. This allows you to choose the location(s) where you want your synthetic script to execute. In the lab, you only have 1 location that you can select. \r\n![Lab 14](../Labs/images/lab14.7.png) \r\n\r\nThe next screen allows you to specify the scheduling interval for your synthetic test. Drag the time slider to 1 minute. Then, select Next\r\n![Lab 14](../Labs/images/lab14.8.png) \r\n\r\nOn the next screen you will give your syntetic test a name and description. Then, optionally, associate the synthetic test with an application. \r\nFinally, click the Create button to finish creating your synthetic test.\r\n![Lab 14](../Labs/images/lab14.9.png) \r\n\r\nOn the next Screen , select Tests Tab \r\nClick on the RoboShop Test  link to drill down into the details of the synthetic test.\r\nIt will take a couple of minutes for the synthetic tests to begin executing.\r\n![Lab 14](../Labs/images/lab14.10.png) \r\n\r\nOn the screen, you can see a summary of the synthetic results. You can also click on the Results tab and see the detailed results of each synthetic test.\r\n![Lab 14](../Labs/images/lab14.11.png) \r\n\r\nYou have now successfully created a synthetic test against a single REST API\r\n\r\n## Summary\r\n\r\nIn this lab, we have created synthetic test for sample REST API endpoint. Synthetic monitoring is a proactive approach to monitoring the performance and functionality of applications, websites, and APIs. It involves simulating real user interactions and measuring how the system responds. This allows you to identify and fix issues before they impact real users.\r\n","type":"Mdx","contentDigest":"3f17c12f5cc6c259938e64a274375840","owner":"gatsby-plugin-mdx","counter":2191},"frontmatter":{"title":"Lab14"},"exports":{},"rawBody":"---\r\ntitle: Lab14\r\n---\r\nexport const Title = () => (\r\n  <span>\r\n    Lab 14 - Synthetic Monitoring <br />\r\n  </span>\r\n);\r\n;\r\n\r\n## Lab Overview\r\n\r\nSynthetic monitoring is a proactive approach to monitoring the performance and functionality of applications, websites, and APIs. It involves simulating real user interactions and measuring how the system responds. This allows you to identify and fix issues before they impact real users.\r\nThis lab focuses on  Instana feature - Synthetic Monitoring.\r\nKey capabilities that we will do are:\r\n1.Setting up the synthetic \"Point of Presence\" This is the component that executes the synthetic test.\r\n2.Test Availability of your website using API Simple Test \r\n\r\nBefore we can create any synthetic tests, we must first setup a synthetic \"Point of Presence\" or \"PoP server\" to playback our synthetic tests. Many customers deploy two or more \"Points of Presence\" so that they can compare the response time and availability from different network zones . \r\nIn the lab, we will begin by installing the \"Synthetic Point of Presence\". \r\n\r\n## Step 1: \r\n\r\nInstall Synthetic Point of Presence component\r\n\r\nPre-requisite \r\nSynthetic PoP needs to be deployed in a Kubernetes/Openshift cluster. Use the helm chart to deploy Synthetic PoP.\r\nThe minimum supported version for the Kubernetes distribution is 1.10 and Helm V3 is recommended\r\n \r\n***********************************************************************************************************\r\n##Note : \r\nOnly If you are using Instana POT Sandbox\r\n\r\nWe will be installing the Synthetic Point of Presence into  Kubernetes Cluster provided in the POT / Sandbox\r\nHelm is already installed on Master Node Server . We will execute below helm command on this server.\r\n***********************************************************************************************************\r\n\r\nMake sure you are logged into the server where Kubernetes/OpenShift Cluster is installed Master/Worker Node \r\n\r\n**Helm**\r\n\r\nIf Helm wasn't installed during previous labs, install it on Student VM now with command:\r\n\r\ncurl (https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)\r\n\r\nClick on \"Synthetic Monitoring\" and then on \"Deploy a PoP\" button:\r\n![Lab 14](../Labs/images/lab14.1.png) \r\n\r\nUse Simple tab for Helm command\r\n![Lab 14](../Labs/images/lab14.2.png) \r\n\r\nYou will need to edit the information contained in the helm command, so copy and paste the text to edit the file and execute accordingly.\r\nHelm install synthetic-pop \\\r\n\t--repo \"https://agents.instana.io/helm\" \\\r\n\t--namespace syn \\\r\n\t--create-namespace \\\r\n\t--set downloadKey=\"xxx\" \\\r\n\t--set controller.location=\"MyPop;RoksDK;India;Blr;0;0;This is a Synthetic PoP Testing\" \\\r\n\t--set controller.clusterName=\"cp4i\" \\\r\n        --set controller.instanaKey=\"xxx\" \\\r\n\t--set controller.instanaSyntheticEndpoint=\"https://synthetics-xxx-saas.instana.io\" \\\r\n\t--set redis.tls.enabled=false \\\r\n\t--set redis.password=\"a1fc5d01bcbb\" \\\r\n        --set seccompDefault=true \\  \r\n\tsynthetic-pop\r\n\r\nThe default helm command will look as  above Some of the parameters have been replace with \"xxx\" for security reasons.\r\nFor Synthetic Point of Presence we need to modify some of the parameters and provide one additional parameter. \r\n•\tAdd --set seccompDefault=true \\. This parameter is required for OpenShift versions 4.11 and above\r\n•\tThen, modify the controller.clusterName parameter and provide a meaningful name.\r\n•\tIn the controller.location, specify a name, display name, country, etc. for your \"Point of Presence\". \r\n\r\nCopy the helm command from the text file and paste it into a terminal window on the Student VM. This will execute the helm chart.\r\nYou should see an output similar to the following:\r\n\r\n[user@bastion ~]$ helm install synthetic-pop \\\r\n>     --repo https://agents.instana.io/helm  \\\r\n>     --namespace syn\\\r\n>     --create-namespace \\\r\n>     --set downloadKey=\"xxx\" \\\r\n>     --set controller.location=\" MyPop;RoksDK;India;Blr;0;0;This is a Synthetic PoP Testing\" \\\r\n>     --set controller.instanaKey=\"xxx\" \\\r\n>     --set controller.clusterName=\"cp4i\" \\\r\n>     --set controller.instanaSyntheticEndpoint=\" https://synthetics-xxx-saas.instana.io \" \\\r\n>     --set redis.tls.enabled=false \\\r\n>     --set redis.password=\"a1fc5d01bcbb\" \\\r\n>     --set seccompDefault=true \\\r\n>     synthetic-pop\r\nNAME: synthetic-pop\r\nLAST DEPLOYED: Thu Jul 13 07:49:37 2023\r\nNAMESPACE: syn\r\nSTATUS: deployed\r\n\r\nVerify Installation \r\nAfter the Synthetic point of presence is installed verify its appearance in the interface:\r\n![Lab 14](../Labs/images/lab14.3.png) \r\n\r\nYou can also confirm that the Synthetic Point of Presence is running by typing:\r\nget pods -n syn-space  ( Syn is a namespace) \r\n\r\n## Step 2: \r\n\r\nRest API Synthetic Tests \r\nLet's begin by executing a simple REST API test. This will be a single REST GET request.\r\nBegin by selecting Synthetics and then + ADD as seen below.\r\n![Lab 14](../Labs/images/lab14.4.png) \r\n\r\nThen, click the Add Synthetic Test button.\r\n![Lab 14](../Labs/images/lab14.5.png) \r\n\r\nyou will see that you have the option of an API Simple test or an API Script test. Leave the default of API Simple and click the Next button.\r\n![Lab 14](../Labs/images/lab14.6.png) \r\n\r\nA new dialog will open prompting for the REST API GET URL. Enter the following URL:\r\nhttp://x.x.x.x:8080/    \r\nThis could be any REST request. In this case, we are testing the  API call within the Robot Shop application deployed on sandbox.\r\n\r\nThen, select your Point of Presence location and click Next. This allows you to choose the location(s) where you want your synthetic script to execute. In the lab, you only have 1 location that you can select. \r\n![Lab 14](../Labs/images/lab14.7.png) \r\n\r\nThe next screen allows you to specify the scheduling interval for your synthetic test. Drag the time slider to 1 minute. Then, select Next\r\n![Lab 14](../Labs/images/lab14.8.png) \r\n\r\nOn the next screen you will give your syntetic test a name and description. Then, optionally, associate the synthetic test with an application. \r\nFinally, click the Create button to finish creating your synthetic test.\r\n![Lab 14](../Labs/images/lab14.9.png) \r\n\r\nOn the next Screen , select Tests Tab \r\nClick on the RoboShop Test  link to drill down into the details of the synthetic test.\r\nIt will take a couple of minutes for the synthetic tests to begin executing.\r\n![Lab 14](../Labs/images/lab14.10.png) \r\n\r\nOn the screen, you can see a summary of the synthetic results. You can also click on the Results tab and see the detailed results of each synthetic test.\r\n![Lab 14](../Labs/images/lab14.11.png) \r\n\r\nYou have now successfully created a synthetic test against a single REST API\r\n\r\n## Summary\r\n\r\nIn this lab, we have created synthetic test for sample REST API endpoint. Synthetic monitoring is a proactive approach to monitoring the performance and functionality of applications, websites, and APIs. It involves simulating real user interactions and measuring how the system responds. This allows you to identify and fix issues before they impact real users.\r\n","fileAbsolutePath":"/Users/brandonwu/Documents/PTS/Gatsby/Instana-1Plus-Day-Partner-Workshop/src/pages/Labs_Advanced_Topics/Lab4.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}