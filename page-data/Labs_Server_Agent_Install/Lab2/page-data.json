{
    "componentChunkName": "component---src-pages-labs-server-agent-install-lab-2-mdx",
    "path": "/Labs_Server_Agent_Install/Lab2/",
    "result": {"pageContext":{"frontmatter":{"description":"Labs Server Agent Install / Lab 2","title":"Labs Server Agent Install / Lab 2"},"relativePagePath":"/Labs_Server_Agent_Install/Lab2.mdx","titleType":"page","MdxNode":{"id":"4cf9bc9b-b001-5344-8e1c-18e6e9d91d9c","children":[],"parent":"67b79fc9-6e31-5e10-a615-533242e52146","internal":{"content":"--\r\ntitle: Lab2\r\n---\r\nexport const Title = () => (\r\n  <span>\r\n    Lab 2 - Agent Troubleshooting <br />\r\n  </span>\r\n);\r\n;\r\n\r\n## Lab Overview\r\n\r\nIn this lab you will be focusing on Linux deployments of the Instana agent. You will learn to access your log files, change your log level to view more troubleshooting detail, and stop and start your agent service for the purpose of troubleshooting your agent. \r\n\r\n## Step 1:\r\n\r\nWe will SSH into the machine that was provided to us. Agent logs are located at:\r\n\r\n```\r\ncd /opt/instana/agent/data/log\r\n```\r\n\r\nIn the event that there is an issue, this would be where we would pull our logfiles. \r\n\r\nThis is an important area to have knowledge of, as support will ask for these logs during troubleshooting sessions. \r\n\r\nIt is also possible to download the logs in the UI if you have access to the UI.\r\n\r\n## Step 2: \r\n\r\nTo start agent debug logging, you will need to stop the agent.\r\n\r\nEnter the following in your terminal window:\r\n\r\n```\r\nsudo service instana-agent stop\r\n```\r\n\r\nWe can then validate that the service has stopped by entering:\r\n\r\n```\r\nsudo service instana-agent status\r\n```\r\n\r\nHint: type “:q” to exit status command.\r\n\r\n![Lab 2](../images/2.3.png)\r\n\r\n\r\n## Step 3:\r\n\r\nDelete all of the files in /opt/instana/agent/data/log\r\n\r\n```\r\nsudo rm /opt/instana/agent/data/log/*\r\n```\r\n\r\nCheck to make sure files are deleted.\r\n\r\n## Step 4:\r\n\r\nTo set the log level to debug, first browse to \r\n\r\n```\r\ncd /opt/instana/agent/etc\r\n```\r\n\r\nWe will be editing org.ops4j.pax.logging.cfg using the vi editor.\r\n\r\nNote that a list of common vi commands are provided towards the end of this lab material in the Reference - vi Editor section. \r\n\r\nAn alternative to the vi editor is nano. I may be easier for those that are not familiar with the vi editor.\r\n\r\n```\r\nsudo vi org.ops4j.pax.logging.cfg\r\n```\r\n\r\n![Lab 2](../images/lab2.2.png)\r\n\r\nNow, change from INFO to DEBUG on the line seen below.\r\nCheck out vi commands if you are experiencing an issue.\r\n\r\n![Lab 2](../images/lab2.3.png)\r\n\r\nOnce you have modified with the proper value, save your work.\r\n\r\n## Step 5:\r\n\r\nStart the agent by entering the following line into the terminal window:\r\n\r\n```\r\nsudo service instana-agent start\r\n```\r\n\r\nValidate that the service has started by entering:\r\n\r\n```\r\nsudo service instana-agent status\r\n```\r\n\r\n## Step 6:\r\n\r\nVerify logging is now at Debug by viewing the agent.log file after navigating to\r\n\r\n```\r\ncd /opt/instana/agent/data/log\r\n```\r\n\r\nFeel free to revert the log level to INFO if you'd like.\r\n\r\n\r\n## Step 7:\r\n\r\nManager Agent from the Instana Portal \r\n\r\nThe Agent Management Dashboard displays the agent configuration and current runtime metrics. In the management area, configurations can be changed, and operations such as a restart can be run. Further down runtime metrics, and the current agent log are shown.\r\n\r\nAgents view:\r\nThe Agents view, which is located in the main navigation bar under More > Agents, provides an overview of all host agents that report to the Instana tenant unit.\r\nWhen you use the search bar on the page, the view can be narrowed down to a subset of agents by using Dynamic Focus Queries.\r\n\r\nGo to the Agent Management Dashboard \r\n![Lab 2](../images/lab2.7a.png)\r\n\r\nLook for for your Agent Name, and validate that the Agent is \"Reporting\" and with \"Green\" color circle to show that is he healthy.  \r\n![Lab 2](../images/lab2.7b.png)\r\n\r\nChanging Agent modes:\r\nThe host agent mode is relevant for host-based licensing, and it is used to decide whether the agent counts as an Infrastructure or an APM agent. The host agent mode can be toggled by using Change Agent Mode control.\r\nIn the Change Agent Mode dialog, the following options are provided:\r\n    APM, which maps to the APM host agent mode\r\n    Infrastructure, which maps to the INFRASTRUCTURE host agent mode\r\n    Disabled, which maps to the OFF host agent mode\r\nMake sure that you Agent is set for \"APM\"\r\n![Lab 2](../images/lab2.7c.png)\r\n\r\nChanging log level:\r\nThe log level defines the level of detail that the agent logs contain.\r\nIn the Change Agent Log Level dialog, the following options are provided:\r\n    INFO, normal level of details\r\n    DEBUG, extended details for troubleshooting\r\n    TRACE, most details for further problem analysis\r\nMake sure that you Agent is set for \"APM\"\r\n![Lab 2](../images/lab2.7d.png)\r\n\r\nUpdating Agents:\r\nThis button manually triggers the agent auto update as described at Updates of Dynamic Host Agents.\r\nNote; During the update, the host agent cannot provide any data so you might see a short gap.\r\n\r\nResetting Agents:\r\nResetting the agent is similar to restarting the agent process, but the current process remains active. It means that OS level watchdogs and service scripts will not see the process identifier (pid) changing.\r\nNote; During the reset, the host agent cannot provide any data, so you might see a short gap.\r\n\r\nRebooting Agents:\r\nRebooting the agent stops the current agent process and create a new one. The process of the used start script remains unchanged, but operating system level watchdogs and service scripts might see a changed process identifier (pid) depending on their watch target.\r\nNote; During the restart, the host agent cannot provide any data, which results in a short gap.\r\n\r\n![Lab 2](../images/lab2.7e.png)\r\n\r\nSensor information:\r\nTo view the list of sensors and host agent components that are used by the agent, click Sensors Info.\r\n![Lab 2](../images/lab2.7f.png)\r\n\r\n![Lab 2](../images/lab2.7g.png)\r\n\r\nSelf monitoring:\r\nNot only is the host agent monitoring other software that is running on the host, but it also does constant lightweight self-monitoring. Gathered metrics can be used to observe host agent performance and resource consumption:\r\n\r\nAgent metrics:\r\n![Lab 2](../images/lab2.7h.png)\r\n\r\nAgent Logs: \r\nYou can see the Agent log from Insana portal \r\n![Lab 2](../images/lab2.7i.png)","type":"Mdx","contentDigest":"92aef7f5750db5ca463e9f8f01288b38","owner":"gatsby-plugin-mdx","counter":1568},"frontmatter":{"description":"Labs Server Agent Install / Lab 2","title":"Labs Server Agent Install / Lab 2"},"exports":{},"rawBody":"--\r\ntitle: Lab2\r\n---\r\nexport const Title = () => (\r\n  <span>\r\n    Lab 2 - Agent Troubleshooting <br />\r\n  </span>\r\n);\r\n;\r\n\r\n## Lab Overview\r\n\r\nIn this lab you will be focusing on Linux deployments of the Instana agent. You will learn to access your log files, change your log level to view more troubleshooting detail, and stop and start your agent service for the purpose of troubleshooting your agent. \r\n\r\n## Step 1:\r\n\r\nWe will SSH into the machine that was provided to us. Agent logs are located at:\r\n\r\n```\r\ncd /opt/instana/agent/data/log\r\n```\r\n\r\nIn the event that there is an issue, this would be where we would pull our logfiles. \r\n\r\nThis is an important area to have knowledge of, as support will ask for these logs during troubleshooting sessions. \r\n\r\nIt is also possible to download the logs in the UI if you have access to the UI.\r\n\r\n## Step 2: \r\n\r\nTo start agent debug logging, you will need to stop the agent.\r\n\r\nEnter the following in your terminal window:\r\n\r\n```\r\nsudo service instana-agent stop\r\n```\r\n\r\nWe can then validate that the service has stopped by entering:\r\n\r\n```\r\nsudo service instana-agent status\r\n```\r\n\r\nHint: type “:q” to exit status command.\r\n\r\n![Lab 2](../images/2.3.png)\r\n\r\n\r\n## Step 3:\r\n\r\nDelete all of the files in /opt/instana/agent/data/log\r\n\r\n```\r\nsudo rm /opt/instana/agent/data/log/*\r\n```\r\n\r\nCheck to make sure files are deleted.\r\n\r\n## Step 4:\r\n\r\nTo set the log level to debug, first browse to \r\n\r\n```\r\ncd /opt/instana/agent/etc\r\n```\r\n\r\nWe will be editing org.ops4j.pax.logging.cfg using the vi editor.\r\n\r\nNote that a list of common vi commands are provided towards the end of this lab material in the Reference - vi Editor section. \r\n\r\nAn alternative to the vi editor is nano. I may be easier for those that are not familiar with the vi editor.\r\n\r\n```\r\nsudo vi org.ops4j.pax.logging.cfg\r\n```\r\n\r\n![Lab 2](../images/lab2.2.png)\r\n\r\nNow, change from INFO to DEBUG on the line seen below.\r\nCheck out vi commands if you are experiencing an issue.\r\n\r\n![Lab 2](../images/lab2.3.png)\r\n\r\nOnce you have modified with the proper value, save your work.\r\n\r\n## Step 5:\r\n\r\nStart the agent by entering the following line into the terminal window:\r\n\r\n```\r\nsudo service instana-agent start\r\n```\r\n\r\nValidate that the service has started by entering:\r\n\r\n```\r\nsudo service instana-agent status\r\n```\r\n\r\n## Step 6:\r\n\r\nVerify logging is now at Debug by viewing the agent.log file after navigating to\r\n\r\n```\r\ncd /opt/instana/agent/data/log\r\n```\r\n\r\nFeel free to revert the log level to INFO if you'd like.\r\n\r\n\r\n## Step 7:\r\n\r\nManager Agent from the Instana Portal \r\n\r\nThe Agent Management Dashboard displays the agent configuration and current runtime metrics. In the management area, configurations can be changed, and operations such as a restart can be run. Further down runtime metrics, and the current agent log are shown.\r\n\r\nAgents view:\r\nThe Agents view, which is located in the main navigation bar under More > Agents, provides an overview of all host agents that report to the Instana tenant unit.\r\nWhen you use the search bar on the page, the view can be narrowed down to a subset of agents by using Dynamic Focus Queries.\r\n\r\nGo to the Agent Management Dashboard \r\n![Lab 2](../images/lab2.7a.png)\r\n\r\nLook for for your Agent Name, and validate that the Agent is \"Reporting\" and with \"Green\" color circle to show that is he healthy.  \r\n![Lab 2](../images/lab2.7b.png)\r\n\r\nChanging Agent modes:\r\nThe host agent mode is relevant for host-based licensing, and it is used to decide whether the agent counts as an Infrastructure or an APM agent. The host agent mode can be toggled by using Change Agent Mode control.\r\nIn the Change Agent Mode dialog, the following options are provided:\r\n    APM, which maps to the APM host agent mode\r\n    Infrastructure, which maps to the INFRASTRUCTURE host agent mode\r\n    Disabled, which maps to the OFF host agent mode\r\nMake sure that you Agent is set for \"APM\"\r\n![Lab 2](../images/lab2.7c.png)\r\n\r\nChanging log level:\r\nThe log level defines the level of detail that the agent logs contain.\r\nIn the Change Agent Log Level dialog, the following options are provided:\r\n    INFO, normal level of details\r\n    DEBUG, extended details for troubleshooting\r\n    TRACE, most details for further problem analysis\r\nMake sure that you Agent is set for \"APM\"\r\n![Lab 2](../images/lab2.7d.png)\r\n\r\nUpdating Agents:\r\nThis button manually triggers the agent auto update as described at Updates of Dynamic Host Agents.\r\nNote; During the update, the host agent cannot provide any data so you might see a short gap.\r\n\r\nResetting Agents:\r\nResetting the agent is similar to restarting the agent process, but the current process remains active. It means that OS level watchdogs and service scripts will not see the process identifier (pid) changing.\r\nNote; During the reset, the host agent cannot provide any data, so you might see a short gap.\r\n\r\nRebooting Agents:\r\nRebooting the agent stops the current agent process and create a new one. The process of the used start script remains unchanged, but operating system level watchdogs and service scripts might see a changed process identifier (pid) depending on their watch target.\r\nNote; During the restart, the host agent cannot provide any data, which results in a short gap.\r\n\r\n![Lab 2](../images/lab2.7e.png)\r\n\r\nSensor information:\r\nTo view the list of sensors and host agent components that are used by the agent, click Sensors Info.\r\n![Lab 2](../images/lab2.7f.png)\r\n\r\n![Lab 2](../images/lab2.7g.png)\r\n\r\nSelf monitoring:\r\nNot only is the host agent monitoring other software that is running on the host, but it also does constant lightweight self-monitoring. Gathered metrics can be used to observe host agent performance and resource consumption:\r\n\r\nAgent metrics:\r\n![Lab 2](../images/lab2.7h.png)\r\n\r\nAgent Logs: \r\nYou can see the Agent log from Insana portal \r\n![Lab 2](../images/lab2.7i.png)","fileAbsolutePath":"/Users/brandonwu/Documents/PTS/Gatsby/Instana-1Plus-Day-Partner-Workshop/src/pages/Labs_Server_Agent_Install/Lab2.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}