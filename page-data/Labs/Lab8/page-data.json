{
    "componentChunkName": "component---src-pages-labs-lab-8-mdx",
    "path": "/Labs/Lab8/",
    "result": {"pageContext":{"frontmatter":{"title":"Lab8"},"relativePagePath":"/Labs/Lab8.mdx","titleType":"page","MdxNode":{"id":"bc6d9650-b6ad-5613-89cc-84063dd533e8","children":[],"parent":"ec5f55cf-6829-5d56-88e2-eccf76ac1d8e","internal":{"content":"---\ntitle: Lab8\n---\nexport const Title = () => (\n  <span>\n    Lab 8 - Endpoint Mapping <br />\n  </span>\n);\n;\n\n## Lab Overview\n\nEndpoints define the API of a service and provide a fine-grained view into what operations are exposed by the services. Every call to a service happens on a single endpoint. Every endpoint has a single, automatically discovered type: BATCH, SHELL, DATABASE, HTTP, MESSAGING, RPC.\nEndpoints are automatically mapped based on the endpoint type. For example, Instana automatically groups HTTP endpoints based on the path template if accessible.\n\n```\n/hospital/1948/patient/291148\n/hospital/728/patient/924892\n/hospital/47/patient/25978\n/hospital/108429/patient/1847\n```\n\nIn the above example, the preceding endpoints, which are being served by the same application code and hence have a shared performance profile, will be grouped and reported together like so:\n\n```\n/hospital/{hid}/patient/{pid}\n```\n\nThis is done automatically and no user steps are required for known frameworks.\n\nIn this lab you will configure a new endpoint extraction using an HTTP GET request. HTTP is just one type of endpoint. At the end of this lab, you will be able to see the new endpoint name you have created on the dashboard.\n\n## Step 1:\n\nUsing the Instana UI, bring up the dashboard for your new rs-ratings-(your last name)service.\n\nThen, Navigate to the Endpoints tab.\n\nFor each service, Instana allows to have one configuration which controls how the services endpoints are getting extracted. \nTo access the configuration, Click on the Configure Endpoints link.\n\n![Lab 8](images/lab8.1.png)\n\n## Step 2:\n\nClick on the Add Custom HTTP Rule link.\nNote that custom endpoint configurations are available for HTTP-based services only.\n\n![Lab 8](images/lab8.2.png)\n\n## Step 3:\n\nEnter the following in the Custom HTTP Rule field:\n\n```\n/api/fetch/{sku}\n```\n\nFeel free to use the Rule tester (copy an actual call from the data to the tester to verify the rule is working correctly).\n\nThen, select save.\n\n![Lab 8](images/lab8.3.png)\n\n## Step 4:\n\nSelect Add.\n\n![Lab 8](images/lab8.4.png)\n\nAnd then verify that you see the new endpoint on the dashboard.\n\nIn this lab we have learnt how we can customize the endpoint mapping configuration for HTTP-based services.","type":"Mdx","contentDigest":"51c3f01eb81adffdc2686d9a557aac04","owner":"gatsby-plugin-mdx","counter":873},"frontmatter":{"title":"Lab8"},"exports":{},"rawBody":"---\ntitle: Lab8\n---\nexport const Title = () => (\n  <span>\n    Lab 8 - Endpoint Mapping <br />\n  </span>\n);\n;\n\n## Lab Overview\n\nEndpoints define the API of a service and provide a fine-grained view into what operations are exposed by the services. Every call to a service happens on a single endpoint. Every endpoint has a single, automatically discovered type: BATCH, SHELL, DATABASE, HTTP, MESSAGING, RPC.\nEndpoints are automatically mapped based on the endpoint type. For example, Instana automatically groups HTTP endpoints based on the path template if accessible.\n\n```\n/hospital/1948/patient/291148\n/hospital/728/patient/924892\n/hospital/47/patient/25978\n/hospital/108429/patient/1847\n```\n\nIn the above example, the preceding endpoints, which are being served by the same application code and hence have a shared performance profile, will be grouped and reported together like so:\n\n```\n/hospital/{hid}/patient/{pid}\n```\n\nThis is done automatically and no user steps are required for known frameworks.\n\nIn this lab you will configure a new endpoint extraction using an HTTP GET request. HTTP is just one type of endpoint. At the end of this lab, you will be able to see the new endpoint name you have created on the dashboard.\n\n## Step 1:\n\nUsing the Instana UI, bring up the dashboard for your new rs-ratings-(your last name)service.\n\nThen, Navigate to the Endpoints tab.\n\nFor each service, Instana allows to have one configuration which controls how the services endpoints are getting extracted. \nTo access the configuration, Click on the Configure Endpoints link.\n\n![Lab 8](images/lab8.1.png)\n\n## Step 2:\n\nClick on the Add Custom HTTP Rule link.\nNote that custom endpoint configurations are available for HTTP-based services only.\n\n![Lab 8](images/lab8.2.png)\n\n## Step 3:\n\nEnter the following in the Custom HTTP Rule field:\n\n```\n/api/fetch/{sku}\n```\n\nFeel free to use the Rule tester (copy an actual call from the data to the tester to verify the rule is working correctly).\n\nThen, select save.\n\n![Lab 8](images/lab8.3.png)\n\n## Step 4:\n\nSelect Add.\n\n![Lab 8](images/lab8.4.png)\n\nAnd then verify that you see the new endpoint on the dashboard.\n\nIn this lab we have learnt how we can customize the endpoint mapping configuration for HTTP-based services.","fileAbsolutePath":"/Users/brandonwu/Documents/PTS/Gatsby/Instana-1Plus-Day-Partner-Workshop/src/pages/Labs/Lab8.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}